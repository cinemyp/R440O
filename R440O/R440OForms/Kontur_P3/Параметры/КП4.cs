namespace R440O.R440OForms.Kontur_P3.Параметры
{
    using СостоянияЭлементов.Контур_П;
    partial class Kontur_P3Parameters
    {
        #region Кнопки
        private static bool _КнопкаКП4Контроль;
        public static bool КнопкаКП4Контроль
        { 
            get { return _КнопкаКП4Контроль; }
            set 
            {
                if(!ЛампочкаПередача)
                    _КнопкаКП4Контроль = value;
                if (_КнопкаКП4Контроль)
                    КнопкаКП1Контроль = false;
                Refresh();
            }
        }
        #endregion

        #region Лампочки
        public static bool ЛампочкаКП4Канал1
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._1
                    || НомерКанала == EПереключательПриоритет._0 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал2
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._2 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал3
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._3 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал4
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._4 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал5
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._5 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал6
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._6 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал7
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._7 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал8
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._8 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }

        public static bool ЛампочкаКП4Канал9
        {
            get
            {
                return ЛампочкаСеть && ((ЗначениеКнопкиКП4Контроль
                    && (НомерКанала == EПереключательПриоритет._9 || Мигание)) || (ЗанятоКП4 && ЗанятоИГорит));
            }
        }
        #endregion

        #region Переключатели
        private static EПереключательПриоритет _ПереключательПриоритет = EПереключательПриоритет._0;
        public static EПереключательПриоритет ПереключательПриоритет
        {
            get { return _ПереключательПриоритет; }
            set
            {
                if (value >= EПереключательПриоритет._0 && value <= EПереключательПриоритет._9)
                {
                    _ПереключательПриоритет = value;
                }
                КнопкаКП4Контроль = false;
                if (RefreshForm != null) RefreshForm();
            }
        }
        #endregion
    }
}
